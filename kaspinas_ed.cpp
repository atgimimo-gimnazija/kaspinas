/*******************************************************************
Имя: kaspinas_ed.cpp
Язык: C++
Задача: Требуется разрезать ленту длиной N на максимальное
число отрезков длинами A, B, C с наименьшим числом обрезков
A, B, C, N - положительные целые числа. 
Решение:
Разрезание ленты длиной N на отрезки длинами A, B, C сводится к перебору
положительных целых решений диофантова уравнения A*x + B*y + C*z = N
и поиску их максимальной суммы.
Т.к. решения сразу может не быть, будем продолжать поиски,
уменьшая с каждый раз N на единицу.
*******************************************************************/
#include <iostream>
using namespace std;

int* sort(int abc[]){
    int tmp;
    // Сортировка abc по возрастанию
    for(int j = 0; j <= 2; j++) {
        for(int i = 0; i <= 1; i++) {
            if(abc[i + 1] < abc[i]) {
                tmp = abc[i + 1];
                abc[i + 1] = abc[i];
                abc[i] = tmp;
            }
        }
    }
    return abc;
}
/*******************************************************************/
/* Функция: diofant                                                */
/* Описание: Поиск наибольшей суммы целых положительных решений    */
/* диофантова уравнения Ax + By + Cz = N                           */
/* A, B, C, N - положительные целые числа.                         */
/*******************************************************************/
int diofant(int A, int B, int C, int N) {
       int sumaMax =-1, x, y, z, flag = 0;
// sumaMax - наше решение
    while((sumaMax==-1) && (N > A)){
// Ищем пока не найдем решение, уменьшая N на единицу.
        if(sumaMax!=-1){
          N--;
        }
// Ищем x, y, z -- положительные целые решения уравнения A*x + B*y + C*z = N
// Присваивая в цикле переменной z значения от 0 до (N/C),
        for(z = 0; z < (N / C); z++){
// ищем x, y -- положительные целые решения уравнения A*x + B*y = t.
            int t = (N - C * z);
            flag = 0; // flag -- признак наличие решения
            for(int i = 0; i < A; i++){
// Присваивая в цикле переменной y значения от 0 до A,
                y = i;
// ищем y, для которого выражение (t - B*y) делится на A без остатка.
                if((t - B * i) % A == 0){
                    x = (t - B * y) / A;
                    flag = 1;
                    break;
                }
            }
// Решение, если оно есть, находится в переменных x, y, z.
            if((x >= 0) && (y >= 0) && (flag == 1)){
                if((x + y + z) > sumaMax){
                    sumaMax = (x + y + z);
                }
            }
        }
    }
    return sumaMax;
}

int main() {
    //Объявляем переменные
    long int n;
    int *abc = new int[3];

    // Ввод значений
    cout << "Enter n:";
    cin >> n;

    cout << "Enter a:";
    cin >> abc[0];

    cout << "Enter b:";
    cin >> abc[1];

    cout << "Enter c:";
    cin >> abc[2];

    int r;
    if((n < abc[2]) || (n < abc[1]) || (n < abc[0])){
        cout << "Error: too big argument!\n";
    }else{
// Сортируем введенные значения для уменьшения числа итерации
        abc = sort(abc);
        r = diofant( abc[0], abc[1], abc[2], n);
        cout << "Answer: " <<  r << "\n";
    }
}
